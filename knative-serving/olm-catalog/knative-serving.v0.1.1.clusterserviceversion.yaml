apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  name: knative-serving.v0.1.1
spec:
  displayName: Knative Serving
  description: |
    Knative Serving builds on Kubernetes and Istio to support deploying and serving of serverless applications and functions
  version: 0.1.1
  maturity: alpha

  install:
    strategy: deployment
    spec:
      permissions:
      - serviceAccountName: controller
        rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - namespaces
          - secrets
          - configmaps
          - endpoints
          - services
          - events
          - serviceaccounts
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - extensions
          resources:
          - ingresses
          - deployments
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          - statefulsets
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - admissionregistration.k8s.io
          resources:
          - mutatingwebhookconfigurations
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - apiextensions.k8s.io
          resources:
          - customresourcedefinitions
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - serving.knative.dev
          resources:
          - configurations
          - configurationgenerations
          - routes
          - revisions
          - revisionuids
          - autoscalers
          - services
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - build.knative.dev
          resources:
          - builds
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
        - apiGroups:
          - networking.istio.io
          resources:
          - virtualservices
          verbs:
          - get
          - list
          - create
          - update
          - delete
          - patch
          - watch
      deployments:
      - name: activator
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: activator
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: "true"
              labels:
                app: activator
                role: activator
            spec:
              containers:
              - args:
                - -logtostderr=true
                - -stderrthreshold=INFO
                image: gcr.io/knative-releases/github.com/knative/serving/cmd/activator@sha256:486d806e33f487d2475d1ff70eb5dcff51cf62a16f4b9af06788674b60b1f2ef
                name: activator
                ports:
                - containerPort: 8080
                  name: http
                volumeMounts:
                - mountPath: /etc/config-logging
                  name: config-logging
              initContainers:
              - name: olm-hack
                image: lachlanevenson/k8s-kubectl
                args: ['apply', '-f', 'https://raw.githubusercontent.com/openshift-cloud-functions/knative-operators/4ed47669915/knative-serving/olm-hack-0.1.1.yaml']
              serviceAccountName: controller
              volumes:
              - configMap:
                  name: config-logging
                name: config-logging

      - name: controller
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: controller
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: "false"
              labels:
                app: controller
            spec:
              containers:
              - image: gcr.io/knative-releases/github.com/knative/serving/cmd/controller@sha256:59abc8765d4396a3fc7cac27a932a9cc151ee66343fa5338fb7146b607c6e306
                name: controller
                ports:
                - containerPort: 9090
                  name: metrics
                volumeMounts:
                - mountPath: /etc/config-logging
                  name: config-logging
              serviceAccountName: controller
              volumes:
              - configMap:
                  name: config-logging
                name: config-logging

      - name: webhook
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: webhook
          template:
            metadata:
              annotations:
                sidecar.istio.io/inject: "false"
              labels:
                app: webhook
                role: webhook
            spec:
              containers:
              - image: gcr.io/knative-releases/github.com/knative/serving/cmd/webhook@sha256:7196a38aaf11ed6426db7c40a771e4f2a27d987606b5773b2d05bb9676908e7d
                name: webhook
                volumeMounts:
                - mountPath: /etc/config-logging
                  name: config-logging
              serviceAccountName: controller
              volumes:
              - configMap:
                  name: config-logging
                name: config-logging

  customresourcedefinitions:
    owned:
      - kind: Configuration
        name: configurations.serving.knative.dev
        description: "Maintains the desired state for your deployment. It provides a clean separation between code and configuration and follows the Twelve-Factor App methodology. Modifying a configuration creates a new revision."
        displayName: Configuration
        version: v1alpha1
      - kind: Revision
        name: revisions.serving.knative.dev
        description: "A point-in-time snapshot of the code and configuration for each modification made to the workload. Revisions are immutable objects and can be retained for as long as useful."
        displayName: Revision
        version: v1alpha1
      - kind: Route
        name: routes.serving.knative.dev
        description: "Maps a network endpoint to a one or more revisions. You can manage the traffic in several ways, including fractional traffic and named routes."
        displayName: Knative Route
        version: v1alpha1
      - kind: Service
        name: services.serving.knative.dev
        description: "Automatically manages the whole lifecycle of your workload. It controls the creation of other objects to ensure that your app has a route, a configuration, and a new revision for each update of the service. Service can be defined to always route traffic to the latest revision or to a pinned revision."
        displayName: Knative Service
        version: v1alpha1
    required:
      - kind: Build
        name: builds.build.knative.dev
        description: Create and run on-cluster processes to completion
        displayName: Build
        version: v1alpha1
      - kind: BuildTemplate
        name: buildtemplates.build.knative.dev
        description: Encapsulates a configurable, reusable build process
        displayName: Build Template
        version: v1alpha1
